[project]
authors = ["Small_Ku <small_ku@outlook.com>"]
channels = ["conda-forge"]
description = "A simple solution to set up automation projects for anime games using Pixi package manager."
name = "Pixi-AutoAnimeGame"
platforms = ["win-64"]
version = "0.1.0"

[tasks]

[dependencies]
python = ">=3.11"
pyside6 = "==6.8.0.2" # pin to avoid issues with pixi update
pyyaml = ">=6.0.0"
opencv = ">=4.10.0"
pyautogui = "*"
pynput = ">=1.7.0"
python-mss = ">=9.0.0"
shapely = ">=2.0.0"
pyclipper = ">=1.0.0"

[pypi-dependencies]
pyside6-fluent-widgets = ">=1.7.0"
onnxruntime-directml = ">=1.18.0"

[feature.zzz.dependencies] # ZenlessZoneZero-OneDragon
pysoundcard = ">=0.4.3"
librosa = "*"
gensim = ">=4.3.3"

[feature.zzz.tasks]
fetch-zzz = "git submodule update --init --remote ZenlessZoneZero-OneDragon"
env-zzz-app = { cmd = "powershell -Command \"(Get-Content '.\\app.bat' -Encoding 'utf8') | ForEach-Object { \\$_ -replace 'call \\\"%~dp0env.bat\\\"', 'set \\\"PYTHON=$CONDA_PREFIX\\pythonw.exe\\\"' -replace '%~dp0.env', '$CONDA_PREFIX' } | Set-Content '.\\app.bat' -Encoding 'utf8'\"", cwd = "ZenlessZoneZero-OneDragon" }
env-zzz-od = { cmd = "powershell -Command \"(Get-Content '.\\one_dragon.bat' -Encoding 'utf8') | ForEach-Object { \\$_ -replace 'call \\\"%~dp0env.bat\\\"', 'set \\\"PYTHON=$CONDA_PREFIX\\pythonw.exe\\\"' -replace '%~dp0.env', '$CONDA_PREFIX' } | Set-Content '.\\one_dragon.bat' -Encoding 'utf8'\"", cwd = "ZenlessZoneZero-OneDragon" }
env-zzz-debug = { cmd = "powershell -Command \"(Get-Content '.\\debug.bat' -Encoding 'utf8') | ForEach-Object { \\$_ -replace 'call \\\"%~dp0env.bat\\\"', 'set \\\"PYTHON=$CONDA_PREFIX\\pythonw.exe\\\"' -replace '%~dp0\\.venv\\\\scripts\\\\python', '$CONDA_PREFIX\\python' -replace '%~dp0.env', '$CONDA_PREFIX' } | Set-Content '.\\debug.bat' -Encoding 'utf8'\"", cwd = "ZenlessZoneZero-OneDragon" }
zzz-app = { cmd = "powershell -Command \"& {Start-Process '.\\app.bat' -Verb RunAs }\"", depends-on = ["env-zzz-app"], cwd = "ZenlessZoneZero-OneDragon" }
zzz-od = { cmd = "powershell -Command \"& {Start-Process '.\\one_dragon.bat' -Verb RunAs }\"", depends-on = ["env-zzz-od"], cwd = "ZenlessZoneZero-OneDragon" }
zzz-debug = { cmd = "powershell -Command \"& {Start-Process '.\\debug.bat' -Verb RunAs }\"", depends-on = ["env-zzz-debug"], cwd = "ZenlessZoneZero-OneDragon" }

[feature.hsr.dependencies] # StarRailOneDragon
scipy = ">=1.13.1"
numpy = ">=1.26.4"
requests = ">=2.32.3"

[feature.hsr.tasks]
fetch-hsr = "git submodule update --init --remote StarRailOneDragon"
env-hsr-app = { cmd = "powershell -Command \"(Get-Content '.\\app.bat' -Encoding 'utf8') | ForEach-Object { \\$_ -replace 'call \\\"%~dp0env.bat\\\"', 'set \\\"PYTHON=$CONDA_PREFIX\\pythonw.exe\\\"' -replace '%~dp0.env', '$CONDA_PREFIX' } | Set-Content '.\\app.bat' -Encoding 'utf8'\"", cwd = "StarRailOneDragon" }
env-hsr-od = { cmd = "powershell -Command \"(Get-Content '.\\one_dragon.bat' -Encoding 'utf8') | ForEach-Object { \\$_ -replace 'call \\\"%~dp0env.bat\\\"', 'set \\\"PYTHON=$CONDA_PREFIX\\pythonw.exe\\\"' -replace '%~dp0.env', '$CONDA_PREFIX' } | Set-Content '.\\one_dragon.bat' -Encoding 'utf8'\"", cwd = "StarRailOneDragon" }
env-hsr-debug = { cmd = "powershell -Command \"(Get-Content '.\\debug.bat' -Encoding 'utf8') | ForEach-Object { \\$_ -replace 'call \\\"%~dp0env.bat\\\"', 'set \\\"PYTHON=$CONDA_PREFIX\\pythonw.exe\\\"' -replace '%~dp0\\.venv\\\\scripts\\\\python', '$CONDA_PREFIX\\python' -replace '%~dp0.env', '$CONDA_PREFIX' } | Set-Content '.\\debug.bat' -Encoding 'utf8'\"", cwd = "StarRailOneDragon" }
hsr-app = { cmd = "powershell -Command \"& {Start-Process '.\\app.bat' -Verb RunAs }\"", depends-on = ["env-hsr-app"], cwd = "StarRailOneDragon" }
hsr-od = { cmd = "powershell -Command \"& {Start-Process '.\\one_dragon.bat' -Verb RunAs }\"", depends-on = ["env-hsr-od"], cwd = "StarRailOneDragon" }
hsr-debug = { cmd = "powershell -Command \"& {Start-Process '.\\debug.bat' -Verb RunAs }\"", depends-on = ["env-hsr-debug"], cwd = "StarRailOneDragon" }

[environments]
default = {features = ["zzz", "hsr"], solve-group = "prod"}
zzz = {features = ["zzz"], solve-group = "prod"}
hsr = {features = ["hsr"], solve-group = "prod"}
